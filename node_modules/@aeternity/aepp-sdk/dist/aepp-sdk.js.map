{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/always.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/./node_modules/ramda/src/lt.js","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/cond.js","webpack://Ae/./node_modules/ramda/src/lte.js","webpack://Ae/./node_modules/ramda/src/T.js","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/external \"events\"","webpack://Ae/./node_modules/ramda/src/once.js","webpack://Ae/./node_modules/ramda/src/pickBy.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/uuid/v4.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/max.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/uuid/lib/rng.js","webpack://Ae/external \"crypto\"","webpack://Ae/./node_modules/uuid/lib/bytesToUuid.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/utils/bignumber.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/node.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js","webpack://Ae/./es/index.js"],"names":["root","factory","exports","module","require","define","amd","undefined","global","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__19__","__WEBPACK_EXTERNAL_MODULE__27__","__WEBPACK_EXTERNAL_MODULE__30__","__WEBPACK_EXTERNAL_MODULE__43__","__WEBPACK_EXTERNAL_MODULE__50__","__WEBPACK_EXTERNAL_MODULE__59__","__WEBPACK_EXTERNAL_MODULE__76__","__WEBPACK_EXTERNAL_MODULE__77__","__WEBPACK_EXTERNAL_MODULE__78__","__WEBPACK_EXTERNAL_MODULE__94__","__WEBPACK_EXTERNAL_MODULE__98__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","_objectAssign","merge","_curry2","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","head","nth","_curry1","_isPlaceholder","f2","a","b","length","_b","_a","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof2","iterator","constructor","_typeof","f1","_has","_isArguments","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","prop","nIdx","ks","checkArgsLength","path","paths","val","fromPairs","pairs","result","last","_includes","join","invoker","_toString","type","slice","map","pluck","_isArray","_isTransformer","methodNames","xf","Array","pop","transducer","init","_reduce","mapObjIndexed","acc","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_isArrayLike","_xwrap","_iterableReduce","iter","step","next","_methodReduce","methodName","symIterator","len","_arrayReduce","reduce","TypeError","f3","_c","_complement","filter","pred","filterable","isNil","x","values","props","vals","always","pick","names","_arity","_curryN","curryN","_indexOf","flatten","_makeFlat","isArray","received","combined","argsIdx","left","combinedIdx","_isFunction","arity","method","target","_curry3","flip","curry","lt","toUpper","defaultTo","v","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","k","lVal","rVal","_checkForMethod","groupBy","reduceBy","push","identity","indexBy","elem","from","_isString","offset","charAt","_dispatchable","_map","_xmap","functor","nodeType","is","assign","output","source","nextKey","methodname","valueFn","valueAcc","keyFn","elt","fromIndex","toIndex","max","cond","pair","lte","without","xs","_includesWith","uniqWith","_objectIs","identical","toLower","_Set","difference","first","second","out","firstLen","secondLen","toFilterOut","add","mergeAll","concat","assoc","hasPath","has","_xdrop","drop","Math","Infinity","_dropLast","dropLast","zipObj","min","once","called","pickBy","test","rng","bytesToUuid","options","buf","rnds","random","ii","find","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arr","_n","_d","_e","_s","_i","arr2","XWrap","f","thisObj","_xfBase","XMap","input","equals","inf","indexOf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","valueOf","message","ignoreCase","multiline","sticky","unicode","size","entries","keysA","extendedStackA","extendedStackB","match","String","_filter","_isObject","_xfilter","XFilter","recursive","flatt","jlen","j","ilen","_quote","_toISOString","seen","recur","y","mapPairs","sort","NaN","repr","replace","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","mergeWithKey","XReduceBy","inputs","_xreduceBy","_path","XDrop","take","_xtake","_reduced","XTake","ret","XDropLast","pos","full","store","_xdropLast","crypto","randomBytes","byteToHex","substr","bth","XFind","found","_xfind","leftPad","inputBuffer","fill","fillArray","Uint8Array","Buffer","rightPad","bigNumberToByteArray","hexString","toBytes","big","Number","isInteger","BigNumber","isBigNumber","VSN","TX_TTL","AENS_NAME_DOMAINS","NAME_FEE","NAME_FEE_BID_INCREMENT","NAME_BID_MAX_LENGTH","NAME_BID_RANGES","31","times","30","29","28","27","26","25","24","23","22","21","20","19","18","17","16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1","NAME_BID_TIMEOUTS","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","MIN_GAS_PRICE","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","channelReconnect","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","ABI_VERSIONS","NO_ABI","SOPHIA","SOLIDITY","FATE","VM_TYPE","AEVM","PROTOCOL_VM_ABI","vmVersion","abiVersion","OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","DEFAULT_FEE","TX_FEE_BASE_GAS","txType","TX_FEE_OTHER_GAS","txSize","relativeTtl","plus","ceil","floor","PREFIX_ID_TAG","ak","nm","cm","ok","ct","ch","ID_TAG_PREFIX","VALIDATION_ERROR","msg","VALIDATION_MESSAGE","isMinusValue","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_LIMA","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_CLAIM_TX_2","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_RECONNECT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","TX_DESERIALIZATION_SCHEMA","ERROR_TYPE","VERIFICATION_FIELD","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","consensusProtocolVersion","JSON","stringify","BASE_VERIFICATION_SCHEMA","minFee","height","balance","accountNonce","createSalt","salt","base64Types","buildContractId","ownerId","nonce","encode","hash","decode","buildHash","data","oracleQueryId","senderId","oracleId","nonceBE","alloc","formatSalt","padStart","produceNameId","split","toLowerCase","nameHash","commitmentHash","namespace","encodeBase58Check","includes","decodeBase64Check","assertedType","decodeBase58Check","encodeBase64Check","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","readPointers","isNameValid","throwError","classify","klass","getMinimumNameFee","domain","nameLength","computeBidFee","startFee","increment","integerValue","ROUND_CEIL","computeAuctionEndBlock","claimHeight","Ecb","aesjs","ModeOfOperation","ecb","isBase64","str","index","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","isAddressValid","isValid","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","blake2b","nameId","allocUnsafe","labels","sha256hash","shajs","update","digest","MAX_SAFE_INTEGER","buffer","checksum","checkSumFn","newChecksum","decodeRaw","bs58check","hexStringToByte","parseInt","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","publicKey","generateKeyPairFromSecret","secret","nacl","sign","keyPair","fromSecretKey","generateKeyPair","publicBuffer","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","encryptPrivateKey","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","RegExp","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","WALLET_PRIV","WALLET_PUB","rlp","OBJECT_TAGS","CHANNEL_OFFCHAIN_UPDATE_TRANSFER","objectTag","pretty","readIntBE","readSignatures","deserializeOffChainUpdate","opts","prettyTags","version","to","amount","readOffChainTXUpdates","updates","deserialize","tx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","ttl","fee","channelId","round","rootHash","nodes","node","serialize","tree","mptHash","ORACLE_TTL_TYPES","delta","block","getOracleRelativeTtl","params","calculateMinFee","gas","vsn","multiplier","actualFee","buildFee","expected","buildTx","rlpEncoded","calculateFee","showWarning","console","warn","gt","validateParams","excludeKeys","assert","valid","gte","validateField","buildRawTx","oracleTtlType","oracleTtlValue","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","transformParams","fieldType","mpt","serializeField","unpackRawTx","vm","abi","unpackTx","funHash","fnName","argType","outType","deserializeField","txObject","fromRlpBinary","objId","buildTxHash","rawTx","ED25519_CURVE","HARDENED_OFFSET","toHex","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","deriveChild","getMasterKeyFromSeed","seed","I","hmac","chainCode","indexBuffer","getSaveHDWalletAccounts","saveHDWallet","accountCount","walletKey","_","formatAccount","fromSeed","generateSaveHDWallet","mnemonic","validateMnemonic","masterKey","derivePathFromSeed","mnemonicToSeed","generateMnemonic","genMnemonic","Tx","stampit","deepConf","Ae","methods","required","spendTx","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","contractCreateTx","contractCallTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","getVmVersion","prepareTxParams","OracleBase","Contract","getOracle","getOracleQueries","getOracleQuery","Chain","Oracle","compose","deepProps","defaults","waitMined","statics","sendTransaction","awaitHeight","topBlock","poll","getBalance","getTxInfo","mempool","txDryRun","getAccount","DEFAULT_NETWORK_ID","opt","networkId","getNetworkId","rlpBinaryTx","Crypto","txWithNetworkId","Account","signTransaction","selectedNode","gaId","contractId","authFun","signUsingGA","authData","createMetaTx","recipientId","resolveRecipientName","send","nameOrAddress","getName","percentage","excludeFee","requestTransferAmount","TxBuilder","minus","transferFunds","destroyInstance","deepConfiguration","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prefixes","magnitude","getNearestPrefix","exponent","abs","getLowerBoundPrefix","shiftedBy","precision","asyncInit","stamp","instance","AsyncInit","initializers","at","text","_options","escapee","number","white","array","composers","composables","gap","indent","rep","escapable","meta","quote","lastIndex","charCodeAt","replacer","space","holder","partial","mind","toJSON","isFinite","parse","uffff","fromCharCode","strict","word","reviver","walk","snakeToPascal","pascalToSnake","expandPath","replacements","lookupType","spec","types","conformTypes","integer","properties","pascalizeKeys","missing","extendingErrorPath","conform","items","$ref","allOf","conformDispatch","httpConfig","headers","transformResponse","JsonBig","transformRequest","httpClients","config","url","axios","post","classifyParameters","parameters","req","query","body","pathArgs","queryArgs","bodyArgs","pascalizeParameters","traverseKeys","snakizeKeys","operationSignature","assertOne","coll","destructureClientError","response","status","statusText","reason","toUpperCase","resolveRef","ref","swag","Swagger","axiosConfig","definition","errorHandler","operationId","description","param","pascalized","optNames","indexedParameters","client","debug","log","conformed","definitions","expandedPath","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","geVersion","ltVersion","versionComponents","geComponents","ltComponents","base","toNumber","components","pow","vNumber","geNumber","ltNumber","remoteSwag","loader","internalUrl","tags","protocols","getCurrentKeyBlock","effectiveAtHeight","Node","handler","getNodeInfo","nodeNetworkId","getConsensusProtocolVersion","forceCompatibility","getStatus","revision","nodeRevision","genesisHash","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","prepareNodeObject","NodePool","pool","Map","validateNodes","selectNode","addNode","propertyDescriptors","currentNode","getterForCurrentNode","nodeInstance","select","isNodeConnected","getNodesInPool","nodeProps","ownerPublicKey","gasPrice","supportedProtocol","txProtocol","resolveDataForBase","chain","accountBalance","getAccountByPubkey","getCurrentKeyBlockHeight","verifySchema","validatorKey","unpackedTx","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","verifyTxBeforeSend","code","errorData","postTransaction","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","formatBalance","getTransactionByHash","pause","duration","setTimeout","h","probe","current","interval","attempts","getTopBlock","top","th","blockHeight","blocks","getTransactionInfoByHash","res","callInfo","getPendingTransactions","getCurrentGeneration","hashOrHeight","getGenerationByHash","getGenerationByHeight","getMicroBlockTransactionsByHash","transactions","getKeyBlockByHash","getKeyBlockByHeight","getMicroBlockHeaderByHash","txs","accounts","dryRunTxs","getContractCode","getNameEntryByName","ChainNode","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getKeyBlock","getContractByteCode","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","postNameTransfer","nameTtl","clientTtl","postNameUpdate","postNameRevoke","deposit","callData","backend","postContractCreate","callerId","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","postOracleRegister","postOracleExtend","responseTtl","queryTtl","postOracleQuery","postOracleRespond","fromId","poi","postChannelCloseSolo","postChannelSlash","initiatorAmountFinal","responderAmountFinal","postChannelSettle","postChannelSnapshotSolo","calculateTtl","relative","absoluteTtl","Transaction","gaAttachTx","protocolForTX","compilerVersion","compilerMajor","compilerOptions","secrets","WeakMap","isGa","MemoryAccount","pub","priv","isBuffer","pubBuffer","validateKeyPair","setSecret","onAccount","signWith","Selector","selectAccount","Accounts","all","process","addAccount","_acc","removeAccount","setKeypair","addresses","freeze","aensUpdate","aensQuery","transfer","aensTransfer","revoke","aensRevoke","majorVersion","minNameFee","nameFee","claimTx","nameInter","_salt","preclaimTx","claim","aensClaim","Aens","aensPreclaim","aensBid","processResponse","baseUrl","put","Http","changeBaseUrl","newUrl","delete","ContractBase","contractEncodeCallDataAPI","contractDecodeDataAPI","compileContractAPI","contractGetACI","setCompilerUrl","getCompilerVersion","contractDecodeCallResultAPI","http","isInit","prepareCompilerOption","function","calldata","bytecode","callValue","callResult","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","ContractCompilerAPI","compilerUrl","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","file_system","filesystem","SOPHIA_TYPES","linkTypeDefs","bindings","typeDef","aciType","typedef","vars","baseType","generic","varianValue","variant","el","injectVars","readType","contractName","transform","tuple","option","bytes","transformMap","variantArgs","transformVariant","transformDecodedData","aci","skipTransformDecoded","addressPrefix","keyT","valueT","variantType","genericMap","getJoiErrorMsg","errors","label","JoiBinary","Joi","extend","joi","any","pre","convert","rules","validate","createError","validateArguments","validationSchema","ordered","prepareSchema","alternatives","g","or","regex","bufferCheck","optional","sparse","abortEarly","getFunctionACI","functions","type_defs","buildContractMethods","aciArgs","stateful","parseArguments","deploy","callStatic","prepareArgsForEncode","contractAddress","defaultOptions","skipArgsConvert","interface","compiled","deployInfo","setOptions","compile","fnACI","payable","contractCallStatic","returns","decodedResult","contractDeploy","transaction","createdAt","contractCompile","getContractInstance","returnValue","decodedError","dryRunAccount","contractEncodeCall","dryRunContractTx","dryRunAmount","pubKey","results","callObj","returnType","handleCallError","contractDecodeData","initState","encodeCall","deployStatic","ContractAPI","ContractACI","ContractWithCompiler","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","typeInfo","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","metaTxRlp","origin","jsonrpc","session","rpcMethods","rpcSessions","postMessage","RpcServer","window","receive","addEventListener","destroyServer","removeEventListener","createSession","uuid","hello","handlers","Rpc","deepProperties","Wallet","onTx","onChain","onContract","rpc","RpcClient","callbacks","parent","sequence","destroyClient","getOracleObject","oracle","queries","oracleQueries","pollQueries","onQuery","pollForQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","q","newQueries","quriesIds","intervalId","setInterval","clearInterval","respond","pollForResponse","pollForQueryResponse","emptyResponse","registerOracle","Aepp","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","channelURL","paramString","encodeURIComponent","emit","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","JSONBig","enqueueAction","guard","action","locked","queue","handleMessage","dequeueMessage","remaining","ping","clearTimeout","disconnect","onMessage","callback","channel_id","details","wrapCallErrorMessage","close","WebSocket","fireOnce","original","ws","W3CWebSocket","initialize","channelOptions","optionsKeys","wsUrl","protocol","reconnectTx","channelClosed","awaitingConnection","EventEmitter","onopen","channelOpen","onclose","onmessage","encodeRlpTx","appendSignature","signFn","signedTx","handleUnexpectedMessage","wsMessage","event","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","role","awaitingOnChainTx","signed_tx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","awaitingOffChainUpdate","accepted","awaitingUpdateConflict","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallsPruned","channels","snakeToPascalObjKeys","contracts","call_data","contract_id","abi_version","caller","caller_id","pubkey","txParams","Channel","on","channelStatus","balances","leave","shutdown","sendMessage","recipient","withdraw","createContract","vm_version","callContract","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","reconnect","Universal"],"mappings":"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","file":"aepp-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__19__, __WEBPACK_EXTERNAL_MODULE__27__, __WEBPACK_EXTERNAL_MODULE__30__, __WEBPACK_EXTERNAL_MODULE__43__, __WEBPACK_EXTERNAL_MODULE__50__, __WEBPACK_EXTERNAL_MODULE__59__, __WEBPACK_EXTERNAL_MODULE__76__, __WEBPACK_EXTERNAL_MODULE__77__, __WEBPACK_EXTERNAL_MODULE__78__, __WEBPACK_EXTERNAL_MODULE__94__, __WEBPACK_EXTERNAL_MODULE__98__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 141);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nmodule.exports = merge;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head = /*#__PURE__*/nth(0);\nmodule.exports = head;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nmodule.exports = path;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last = /*#__PURE__*/nth(-1);\nmodule.exports = last;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains = /*#__PURE__*/_curry2(_includes);\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__19__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _toString = /*#__PURE__*/require('./internal/_toString');\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar prop = /*#__PURE__*/require('./prop');\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isTransformer = /*#__PURE__*/require('./_isTransformer');\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__27__;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nmodule.exports = prop;","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\nvar _xwrap = /*#__PURE__*/require('./_xwrap');\n\nvar bind = /*#__PURE__*/require('../bind');\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nmodule.exports = values;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nmodule.exports = always;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pick;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","var _indexOf = /*#__PURE__*/require('./_indexOf');\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _includes;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _makeFlat = /*#__PURE__*/require('./internal/_makeFlat');\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","module.exports = __WEBPACK_EXTERNAL_MODULE__43__;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = flip;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__50__;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nmodule.exports = lt;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nmodule.exports = defaultTo;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar mergeDeepWithKey = /*#__PURE__*/require('./mergeDeepWithKey');\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepRight;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nmodule.exports = groupBy;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _identity = /*#__PURE__*/require('./internal/_identity');\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","var reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__59__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nmodule.exports = nth;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xmap = /*#__PURE__*/require('./internal/_xmap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isString = /*#__PURE__*/require('./_isString');\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _isArray = /*#__PURE__*/require('./_isArray');\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _curryN = /*#__PURE__*/require('./internal/_curryN');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xreduceBy = /*#__PURE__*/require('./internal/_xreduceBy');\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nmodule.exports = reduceBy;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","module.exports = __WEBPACK_EXTERNAL_MODULE__76__;","module.exports = __WEBPACK_EXTERNAL_MODULE__77__;","module.exports = __WEBPACK_EXTERNAL_MODULE__78__;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar max = /*#__PURE__*/require('./max');\n\nvar reduce = /*#__PURE__*/require('./reduce');\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\n\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nmodule.exports = cond;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nmodule.exports = lte;","\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nmodule.exports = T;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar flip = /*#__PURE__*/require('./flip');\n\nvar reject = /*#__PURE__*/require('./reject');\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nmodule.exports = without;","var _includesWith = /*#__PURE__*/require('./internal/_includesWith');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = uniqWith;","var _objectIs = /*#__PURE__*/require('./internal/_objectIs');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nmodule.exports = identical;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _Set = /*#__PURE__*/require('./internal/_Set');\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = difference;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nmodule.exports = mergeAll;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nmodule.exports = assoc;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar hasPath = /*#__PURE__*/require('./hasPath');\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nmodule.exports = has;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xdrop = /*#__PURE__*/require('./internal/_xdrop');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _dropLast = /*#__PURE__*/require('./internal/_dropLast');\n\nvar _xdropLast = /*#__PURE__*/require('./internal/_xdropLast');\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = zipObj;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__94__;","module.exports = require(\"events\");","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nmodule.exports = once;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = pickBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__98__;","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var curry = /*#__PURE__*/require('./curry');\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xfind = /*#__PURE__*/require('./internal/_xfind');\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;","var _has = /*#__PURE__*/require('./_has');\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nmodule.exports = max;","var equals = /*#__PURE__*/require('../equals');\n\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _equals = /*#__PURE__*/require('./internal/_equals');\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _includesWith = /*#__PURE__*/require('./_includesWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _objectIs = /*#__PURE__*/require('./_objectIs');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xfilter = /*#__PURE__*/require('./internal/_xfilter');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\nmodule.exports = _isFunction;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _map = /*#__PURE__*/require('./_map');\n\nvar _quote = /*#__PURE__*/require('./_quote');\n\nvar _toISOString = /*#__PURE__*/require('./_toISOString');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar reject = /*#__PURE__*/require('../reject');\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar mergeWithKey = /*#__PURE__*/require('./mergeWithKey');\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWithKey;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nmodule.exports = mergeWithKey;","var _curryN = /*#__PURE__*/require('./_curryN');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XReduceBy = /*#__PURE__*/function () {\n\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nmodule.exports = _xreduceBy;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = hasPath;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;","var take = /*#__PURE__*/require('../take');\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xtake = /*#__PURE__*/require('./internal/_xtake');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XTake = /*#__PURE__*/function () {\n\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nmodule.exports = _xtake;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDropLast = /*#__PURE__*/function () {\n\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nmodule.exports = _xdropLast;","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","module.exports = require(\"crypto\");","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFind = /*#__PURE__*/function () {\n\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nmodule.exports = _xfind;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined) return undefined\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n/* eslint-disable no-unused-vars */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\nexport const VSN_2 = 2\n\n// # TRANSACTION DEFAULT TTL\nexport const TX_TTL = 0\n\n// # AENS\nexport const AENS_NAME_DOMAINS = ['chain', 'test']\nexport const NAME_TTL = 500\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000\nexport const NAME_MAX_CLIENT_TTL = 84600\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL\nexport const NAME_FEE = 0\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05 // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480 // # ~1 day\nexport const NAME_BID_MAX_LENGTH = 12 // # this is the max length for a domain to be part of a bid\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # bid ranges:\nexport const NAME_BID_RANGES = {\n  31: BigNumber(3).times(NAME_FEE_MULTIPLIER),\n  30: BigNumber(5).times(NAME_FEE_MULTIPLIER),\n  29: BigNumber(8).times(NAME_FEE_MULTIPLIER),\n  28: BigNumber(13).times(NAME_FEE_MULTIPLIER),\n  27: BigNumber(21).times(NAME_FEE_MULTIPLIER),\n  26: BigNumber(34).times(NAME_FEE_MULTIPLIER),\n  25: BigNumber(55).times(NAME_FEE_MULTIPLIER),\n  24: BigNumber(89).times(NAME_FEE_MULTIPLIER),\n  23: BigNumber(144).times(NAME_FEE_MULTIPLIER),\n  22: BigNumber(233).times(NAME_FEE_MULTIPLIER),\n  21: BigNumber(377).times(NAME_FEE_MULTIPLIER),\n  20: BigNumber(610).times(NAME_FEE_MULTIPLIER),\n  19: BigNumber(987).times(NAME_FEE_MULTIPLIER),\n  18: BigNumber(1597).times(NAME_FEE_MULTIPLIER),\n  17: BigNumber(2584).times(NAME_FEE_MULTIPLIER),\n  16: BigNumber(4181).times(NAME_FEE_MULTIPLIER),\n  15: BigNumber(6765).times(NAME_FEE_MULTIPLIER),\n  14: BigNumber(10946).times(NAME_FEE_MULTIPLIER),\n  13: BigNumber(17711).times(NAME_FEE_MULTIPLIER),\n  12: BigNumber(28657).times(NAME_FEE_MULTIPLIER),\n  11: BigNumber(46368).times(NAME_FEE_MULTIPLIER),\n  10: BigNumber(75025).times(NAME_FEE_MULTIPLIER),\n  9: BigNumber(121393).times(NAME_FEE_MULTIPLIER),\n  8: BigNumber(196418).times(NAME_FEE_MULTIPLIER),\n  7: BigNumber(317811).times(NAME_FEE_MULTIPLIER),\n  6: BigNumber(514229).times(NAME_FEE_MULTIPLIER),\n  5: BigNumber(832040).times(NAME_FEE_MULTIPLIER),\n  4: BigNumber(1346269).times(NAME_FEE_MULTIPLIER),\n  3: BigNumber(2178309).times(NAME_FEE_MULTIPLIER),\n  2: BigNumber(3524578).times(NAME_FEE_MULTIPLIER),\n  1: BigNumber(5702887).times(NAME_FEE_MULTIPLIER)\n}\n\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273\n// # name bid timeouts\nexport const NAME_BID_TIMEOUTS = {\n  13: 0,\n  8: NAME_BID_TIMEOUT_BLOCKS, // # 480 blocks\n  4: 31 * NAME_BID_TIMEOUT_BLOCKS, // # 14880 blocks\n  1: 62 * NAME_BID_TIMEOUT_BLOCKS // # 29760 blocks\n}\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_CHANNEL_RECONNECT_TX = 575\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000 // min gasPrice 1e9\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @type {Object} TX_TYPE\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  channelReconnect: 'channelReconnect',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4,\n  FATE: 5,\n  SOPHIA_IMPROVEMENTS_LIMA: 6\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  FATE: 3\n}\n\nexport const VM_TYPE = { FATE: 'fate', AEVM: 'aevm' }\n\n// First abi/vm by default\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_LIMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  1: VM_ABI_MAP_ROMA,\n  // Minerva\n  2: VM_ABI_MAP_MINERVA,\n  // Fortuna\n  3: VM_ABI_MAP_FORTUNA,\n  // Lima\n  4: VM_ABI_MAP_LIMA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: TX_TYPE.channelReconnect,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber(30 * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR('Not a string'),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR('Value must be of type Array and contains only object\\'s like \\'{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}\\''),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR('Value must be an object with \"vmVersion\" and \"abiVersion\" fields')\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_LIMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string),\n  TX_FIELD('payable', FIELD_TYPES.bool)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('nameFee', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.int)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_RECONNECT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('role', FIELD_TYPES.string),\n  TX_FIELD('pubkey', FIELD_TYPES.id, 'ak')\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.channelReconnect]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    3: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_LIMA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => 'The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address',\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","import * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  nameId as nameHash,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport {\n  ID_TAG_PREFIX,\n  PREFIX_ID_TAG,\n  AENS_NAME_DOMAINS,\n  NAME_BID_RANGES,\n  NAME_BID_MAX_LENGTH,\n  NAME_FEE, NAME_FEE_BID_INCREMENT, NAME_BID_TIMEOUTS\n} from './schema'\nimport { ceil } from '../../utils/bignumber'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data) {\n  return encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Encode a domain name\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Name to encode\n * @return {String} `nm_` prefixed encoded domain name\n */\nexport function produceNameId (name) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return encode(hash(name.toLowerCase()), 'nm')\n  return encode(nameHash(name), 'nm')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport function commitmentHash (name, salt = createSalt()) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return `cm_${encodeBase58Check(hash(Buffer.concat([Buffer.from(name), formatSalt(salt)])))}`\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameHash(name.toLowerCase()), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type) {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p.key),\n      writeId(p.id)\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\n/**\n * Is name valid\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} name\n * @param {boolean} [throwError=true] Throw error on invalid\n * @return Boolean\n * @throws Error\n */\nexport function isNameValid (name, throwError = true) {\n  if ((!name || typeof name !== 'string') && throwError) throw new Error('AENS: Name must be a string')\n  if (!AENS_NAME_DOMAINS.includes(R.last(name.split('.')))) {\n    if (throwError) throw new Error(`AENS: Invalid name domain. Possible domains [${AENS_NAME_DOMAINS}]`)\n    return false\n  }\n  return true\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nexport function classify (s) {\n  const keys = {\n    ak: 'account_pubkey',\n    ok: 'oracle_pubkey',\n    ct: 'contract_pubkey',\n    ch: 'channel'\n  }\n\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in keys) {\n    return keys[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Get the minimum name fee for a domain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} domain the domain name to get the fee for\n * @return String the minimum fee for the domain auction\n */\nexport function getMinimumNameFee (domain) {\n  const nameLength = domain.replace('.aet', '').length\n  return NAME_BID_RANGES[nameLength >= NAME_BID_MAX_LENGTH ? NAME_BID_MAX_LENGTH : nameLength]\n}\n\nexport function computeBidFee (domain, startFee = NAME_FEE, increment = NAME_FEE_BID_INCREMENT) {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new Error(`Increment must be float. Current increment ${increment}`)\n  if (increment < NAME_FEE_BID_INCREMENT) throw new Error(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`)\n  return ceil(\n    BigNumber(BigNumber(startFee).eq(NAME_FEE) ? getMinimumNameFee(domain) : startFee).times(BigNumber(NAME_FEE_BID_INCREMENT).plus(1))\n  )\n}\n\nexport function computeAuctionEndBlock (domain, claimHeight) {\n  return R.cond([\n    [R.lt(4), R.always(NAME_BID_TIMEOUTS[1] + claimHeight)],\n    [R.lt(8), R.always(NAME_BID_TIMEOUTS[4] + claimHeight)],\n    [R.lte(NAME_BID_MAX_LENGTH), R.always(NAME_BID_TIMEOUTS[8] + claimHeight)],\n    [R.T, R.always(claimHeight)]\n  ])(domain.replace('.aet', '').length)\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  createSalt,\n  buildHash,\n  isNameValid,\n  produceNameId,\n  classify\n}\n","import { BigNumber } from 'bignumber.js'\n\nexport function parseBigNumber (number) {\n  return BigNumber(number.toString()).toString(10)\n}\n\nexport function ceil (bigNumber) {\n  return bigNumber.integerValue(BigNumber.ROUND_CEIL)\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport { leftPad, rightPad, toBytes } from './bytes'\nimport shajs from 'sha.js'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  // eslint-disable-next-line no-useless-escape\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+\\/=]/i)) return false\n  const index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @param {String} prefix Transaction prefix. Default: 'ak'\n * @return {Boolean} valid\n */\nexport function isAddressValid (address, prefix = 'ak') {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, prefix)).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameId (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  var a = []\n  for (var i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('æternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(personalMessageToBinary(message), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(personalMessageToBinary(str), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  const keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert base58 encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Array} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env.WALLET_PRIV,\n    publicKey: env.WALLET_PUB\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n\nconst OBJECT_TAGS = {\n  SIGNED_TX: 11,\n  CHANNEL_CREATE_TX: 50,\n  CHANNEL_CLOSE_MUTUAL_TX: 53,\n  CHANNEL_OFFCHAIN_TX: 57,\n  CHANNEL_OFFCHAIN_UPDATE_TRANSFER: 570\n}\n\nfunction objectTag (tag, pretty) {\n  if (pretty) {\n    const entry = Object.entries(OBJECT_TAGS).find(([key, value]) => tag === value)\n    return entry ? entry[0] : tag\n  }\n  return tag\n}\n\nfunction readInt (buf) {\n  return buf.readIntBE(0, buf.length)\n}\n\nfunction readId (buf) {\n  const type = buf.readUIntBE(0, 1)\n  const prefix = {\n    1: 'ak',\n    2: 'nm',\n    3: 'cm',\n    4: 'ok',\n    5: 'ct',\n    6: 'ch'\n  }[type]\n  const hash = encodeBase58Check(buf.slice(1, buf.length))\n  return `${prefix}_${hash}`\n}\n\nfunction readSignatures (buf) {\n  const signatures = []\n\n  for (let i = 0; i < buf.length; i++) {\n    signatures.push(encodeBase58Check(buf[i]))\n  }\n\n  return signatures\n}\n\nfunction deserializeOffChainUpdate (binary, opts) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_UPDATE_TRANSFER:\n      return Object.assign(obj, {\n        from: readId(binary[2]),\n        to: readId(binary[3]),\n        amount: readInt(binary[4])\n      })\n  }\n\n  return obj\n}\n\nfunction readOffChainTXUpdates (buf, opts) {\n  const updates = []\n\n  for (let i = 0; i < buf.length; i++) {\n    updates.push(deserializeOffChainUpdate(decode(buf[i]), opts))\n  }\n\n  return updates\n}\n\n/**\n * Deserialize `binary` state channel transaction\n * @rtype (binary: String) => Object\n * @param {String} binary - Data to deserialize\n * @param {Object} opts - Options\n * @return {Object} Channel data\n */\nexport function deserialize (binary, opts = { prettyTags: false }) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.SIGNED_TX:\n      return Object.assign(obj, {\n        signatures: readSignatures(binary[2]),\n        tx: deserialize(decode(binary[3]), opts)\n      })\n\n    case OBJECT_TAGS.CHANNEL_CREATE_TX:\n      return Object.assign(obj, {\n        initiator: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responder: readId(binary[4]),\n        responderAmount: readInt(binary[5]),\n        channelReserve: readInt(binary[6]),\n        lockPeriod: readInt(binary[7]),\n        ttl: readInt(binary[8]),\n        fee: readInt(binary[9])\n      })\n\n    case OBJECT_TAGS.CHANNEL_CLOSE_MUTUAL_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responderAmount: readInt(binary[4]),\n        ttl: readInt(binary[5]),\n        fee: readInt(binary[6]),\n        nonce: readInt(binary[7])\n      })\n\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        round: readInt(binary[3]),\n        updates: readOffChainTXUpdates(binary[4], opts),\n        state: encodeBase58Check(binary[5])\n      })\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","/* eslint-disable curly */\nimport { BigNumber } from 'bignumber.js'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport { readInt, readId, readPointers, writeId, writeInt, buildPointers, encode, decode, buildHash } from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion: {\n      // eslint-disable-next-line no-unused-vars\n      const [vm, _, abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    }\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.int: {\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    }\n    case FIELD_TYPES.id:\n      if (Array.isArray(prefix)) {\n        const p = prefix.find(p => p === value.split('_')[0])\n        return assert(p && PREFIX_ID_TAG[value.split('_')[0]], { value, prefix })\n      }\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'abiVersion') && Object.prototype.hasOwnProperty.call(value, 'vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params) {\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        acc[key] = value\n        if (key === 'oracleTtl') acc = {\n          ...acc,\n          oracleTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          oracleTtlValue: value.value\n        }\n        if (key === 'queryTtl') acc = {\n          ...acc,\n          queryTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          queryTtlValue: value.value\n        }\n        if (key === 'responseTtl') acc = {\n          ...acc,\n          responseTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          responseTtlValue: value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params) {\n  // eslint-disable-next-line no-unused-vars\n  const [_, { value = 500 }] = Object.entries(params).find(([key]) => ['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) || ['', {}]\n  return value // TODO investigate this\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params, vsn }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas, vsn })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas, vsn })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier, vsn }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType, { vsn })\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType)\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true, vsn } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  const minFee = calculateMinFee(txType, { params, gas, vsn })\n  if (fee && BigNumber(minFee).gt(BigNumber(fee)) && showWarning) console.warn(`Transaction fee is lower then min fee! Min fee: ${minFee}`)\n\n  return fee || minFee\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [] } = {}) {\n  // Transform params(reason is for do not break current interface of `tx`)\n  params = transformParams(params)\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key))\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx', vsn = VSN } = {}) {\n  if (!TX_SERIALIZATION_SCHEMA[type]) {\n    throw new Error('Transaction serialization not implemented for ' + type)\n  }\n  if (!TX_SERIALIZATION_SCHEMA[type][vsn]) {\n    throw new Error('Transaction serialization not implemented for ' + type + ' version ' + vsn)\n  }\n  const [schema, tag] = TX_SERIALIZATION_SCHEMA[type][vsn]\n  const binary = buildRawTx({ ...params, VSN: vsn, tag }, schema, { excludeKeys }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Array} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  if (!TX_DESERIALIZATION_SCHEMA[objId]) {\n    throw new Error('Transaction deserialization not implemented for tag ' + objId)\n  }\n  const vsn = readInt(binary[1])\n  if (!TX_DESERIALIZATION_SCHEMA[objId][vsn]) {\n    throw new Error('Transaction deserialization not implemented for tag ' + objId + ' version ' + vsn)\n  }\n  const [schema] = TX_DESERIALIZATION_SCHEMA[objId][vsn]\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded)\n  return buildHash('th', rawTx)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), secretKey, indexBuffer])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport default {\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'getVmVersion', 'prepareTxParams'\n        // Todo Enable GA\n        // 'gaAttachTx',\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    // Todo Enable GA\n    // gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Chain: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Chain: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'getBalance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    getBalance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object|String} Transaction or transaction hash\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\nimport * as Crypto from '../utils/crypto'\nimport { buildTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\n\nconst DEFAULT_NETWORK_ID = 'ae_mainnet'\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = {}) {\n  const networkId = this.getNetworkId()\n  const rlpBinaryTx = Crypto.decodeBase64Check(Crypto.assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Obtain networkId for signing\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nfunction getNetworkId () {\n  return this.networkId || (this.selectedNode ? this.selectedNode.networkId : false) || DEFAULT_NETWORK_ID\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId']\n    }\n  }\n}, required({\n  methods: {\n    sign: required,\n    address: required\n  }\n}))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport { BigNumber } from 'bignumber.js'\nimport { isAddressValid } from '../utils/crypto'\nimport { isNameValid, produceNameId } from '../tx/builder/helpers'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {String|String} Transaction or transaction hash\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, opt)\n  return this.sendTransaction(signed, opt)\n}\n\n// eslint-disable-next-line no-unused-vars\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientId - Address or Name of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function spend (amount, recipientId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  recipientId = await this.resolveRecipientName(recipientId, options)\n  const spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(opt), recipientId, amount }))\n  return this.send(spendTx, opt)\n}\n\n/**\n * Resolve AENS name and return name hash\n *\n * @param {String} nameOrAddress\n * @param verify\n * @return {String} Address or AENS name hash\n */\nasync function resolveRecipientName (nameOrAddress, { verify = false }) {\n  if (isAddressValid(nameOrAddress)) return nameOrAddress\n  if (isNameValid(nameOrAddress)) {\n    // Validation\n    if (verify) {\n      const { pointers } = await this.getName(nameOrAddress)\n      if (!pointers.find(({ id }) => id.split('_')[0] === 'ak')) throw new Error(`Name ${nameOrAddress} do not have pointers for account`)\n    }\n    return produceNameId(nameOrAddress)\n  }\n  throw new Error('Invalid recipient name or address: ' + nameOrAddress)\n}\n\n/**\n * Send a percentage of funds to another account\n * @instance\n * @category async\n * @rtype (percentage: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} percentage - Percentage of amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function transferFunds (percentage, recipientId, options = { excludeFee: false }) {\n  if (percentage < 0 || percentage > 1) throw new Error(`Percentage should be a number between 0 and 1, got ${percentage}`)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const requestTransferAmount = BigNumber(await this.balance(await this.address())).times(percentage)\n  let spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount: requestTransferAmount }))\n\n  const { tx: txObject } = TxBuilder.unpackTx(spendTx)\n  // If the requestTransferAmount should include the fee keep calculating the fee\n  let amount = requestTransferAmount\n  if (!options.excludeFee) {\n    while (amount.plus(txObject.fee).gt(requestTransferAmount)) {\n      amount = requestTransferAmount.minus(txObject.fee)\n    }\n  }\n\n  // Rebuild tx\n  spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount }))\n\n  return this.send(spendTx, opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, resolveRecipientName, signUsingGA },\n  deepProps: { Ae: { defaults: {} } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","import { BigNumber } from 'bignumber.js'\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","import BigNumber from 'bignumber.js'\n\n/* eslint-disable */\nexport default {\n  stringify: (function () {\n    'use strict';\n\n    function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string'\n          ? c\n          : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key],\n        isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value) || BigNumber(value).toString(10) === value);\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === 'object' &&\n        typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n        case 'string':\n          if (isBigNumber) {\n            return value;\n          } else {\n            return quote(value);\n          }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n            return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n            length = value.length;\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || 'null';\n            }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n            v = partial.length === 0\n              ? '[]'\n              : gap\n                ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                : '[' + partial.join(',') + ']';\n            gap = mind;\n            return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n            length = rep.length;\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === 'string') {\n                k = rep[i];\n                v = str(k, value);\n                if (v) {\n                  partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                }\n              }\n            }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n            Object.keys(value).forEach(function(k) {\n              var v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n              }\n            });\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0\n            ? '{}'\n            : gap\n              ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n              : '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    return function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n          indent += ' ';\n        }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n        indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n        (typeof replacer !== 'object' ||\n          typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n    };\n  }()),\n  parse: ((options) => {\n    // This is a function that can parse a JSON text, producing a JavaScript\n    // data structure. It is a simple, recursive descent parser. It does not use\n    // eval or regular expressions, so it can be used as a model for implementing\n    // a JSON parser in other languages.\n\n    // We are defining the function inside of another function to avoid creating\n    // global letiables.\n\n    // Default options one can override by passing options to the parse()\n    const _options = {\n      'strict': false, // not being strict means do not generate syntax errors for \"duplicate key\"\n      'storeAsString': false // toggles whether the values should be stored as BigNumber (default) or a string\n    }\n\n    const escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t'\n    }\n\n    // If there are options, then use them to override the default _options\n    if (options !== undefined && options !== null) {\n      if (options.strict === true) {\n        _options.strict = true\n      }\n      if (options.storeAsString === true) {\n        _options.storeAsString = true\n      }\n    }\n\n    let at\n    // The index of the current character\n\n    let ch\n    // The current character\n\n    let text\n\n    let error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text\n      }\n    }\n\n    let next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'')\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at)\n      at += 1\n      return ch\n    }\n\n    let number = function () {\n      // Parse a number value.\n\n      let number\n\n      let string = ''\n\n      if (ch === '-') {\n        string = '-'\n        next('-')\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch\n        next()\n      }\n      if (ch === '.') {\n        string += '.'\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch\n        next()\n        if (ch === '-' || ch === '+') {\n          string += ch\n          next()\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch\n          next()\n        }\n      }\n      number = +string\n      if (!isFinite(number)) {\n        error('Bad number')\n      } else {\n        // if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15) { return string }\n        return number\n      }\n    }\n\n    let string = function () {\n      // Parse a string value.\n\n      let hex\n\n      let i\n\n      let string = ''\n\n      let uffff\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        while (next()) {\n          if (ch === '\"') {\n            next()\n            return string\n          }\n          if (ch === '\\\\') {\n            next()\n            if (ch === 'u') {\n              uffff = 0\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16)\n                if (!isFinite(hex)) {\n                  break\n                }\n                uffff = uffff * 16 + hex\n              }\n              string += String.fromCharCode(uffff)\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch]\n            } else {\n              break\n            }\n          } else {\n            string += ch\n          }\n        }\n      }\n      error('Bad string')\n    }\n\n    let white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next()\n      }\n    }\n\n    let word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t')\n          next('r')\n          next('u')\n          next('e')\n          return true\n        case 'f':\n          next('f')\n          next('a')\n          next('l')\n          next('s')\n          next('e')\n          return false\n        case 'n':\n          next('n')\n          next('u')\n          next('l')\n          next('l')\n          return null\n      }\n      error('Unexpected \\'' + ch + '\\'')\n    }\n\n    let value\n    // Place holder for the value function.\n\n    let array = function () {\n      // Parse an array value.\n\n      let array = []\n\n      if (ch === '[') {\n        next('[')\n        white()\n        if (ch === ']') {\n          next(']')\n          return array // empty array\n        }\n        while (ch) {\n          array.push(value())\n          white()\n          if (ch === ']') {\n            next(']')\n            return array\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad array')\n    }\n\n    let object = function () {\n      // Parse an object value.\n\n      let key\n\n      let object = {}\n\n      if (ch === '{') {\n        next('{')\n        white()\n        if (ch === '}') {\n          next('}')\n          return object // empty object\n        }\n        while (ch) {\n          key = string()\n          white()\n          next(':')\n          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {\n            error('Duplicate key \"' + key + '\"')\n          }\n          object[key] = value()\n          white()\n          if (ch === '}') {\n            next('}')\n            return object\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad object')\n    }\n\n    value = function () {\n      // Parse a JSON value. It could be an object, an array, a string, a number,\n      // or a word.\n\n      white()\n      switch (ch) {\n        case '{':\n          return object()\n        case '[':\n          return array()\n        case '\"':\n          return string()\n        case '-':\n          return number()\n        default:\n          return ch >= '0' && ch <= '9' ? number() : word()\n      }\n    }\n\n    // Return the json_parse function. It will have access to all of the above\n    // functions and letiables.\n\n    return function (source, reviver) {\n      let result\n\n      text = source + ''\n      at = 0\n      ch = ' '\n      result = value()\n      white()\n      if (ch) {\n        error('Syntax error')\n      }\n\n      // If there is a reviver function, we recursively walk the new structure,\n      // passing each name/value pair to the reviver function for possible\n      // transformation, starting with a temporary root object that holds the result\n      // in an empty key. If there is not a reviver function, we simply return the\n      // result.\n\n      return typeof reviver === 'function'\n        ? (function walk (holder, key) {\n          let k; let v; let value = holder[key]\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k)\n              if (v !== undefined) {\n                value[k] = v\n              } else {\n                delete value[k]\n              }\n            })\n          }\n          return reviver.call(holder, key, value)\n        }({ '': result }, ''))\n        : result\n    }\n  })()\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    // eslint-disable-next-line no-void\n    if (match !== void 0) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError('Not a string', spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError('Not an object', spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError('Not an array', spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data, statusText } = error.response\n  const reason = R.has('reason', data) ? data.reason : data ? R.toString(data) : statusText\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Resolve reference\n * @rtype (ref: String, swag: Object) => Object\n * @param {String} ref - Reference to resolve\n * @param {Object} swag\n * @return {Object} Resolved reference definition\n */\nfunction resolveRef (ref, swag) {\n  const match = ref.match(/^#\\/(.+)$/)\n  // eslint-disable-next-line no-void\n  if (match !== void 0) {\n    const value = R.path(match[1].split('/'), swag)\n    if (value != null) {\n      return value\n    }\n  }\n\n  throw Error(`Could not resolve reference: ${ref}`)\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, swag, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  const parameters = (definition.parameters || []).map(param =>\n    param.$ref ? resolveRef(param.$ref, swag) : param\n  )\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], swag.definitions)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], swag.definitions)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, swag, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('-')[0].split('.')\n  const geComponents = geVersion.split('-')[0].split('.')\n  const ltComponents = ltVersion.split('-')[0].split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ name, url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      !(semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION)) &&\n      // Todo implement 'rc' version comparision in semverSatisfies\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '3.0.1'\nconst NODE_LT_VERSION = '6.0.0'\n\nexport default Node\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error('You can\\'t use Node API. Node is not connected or not defined!')\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport Node from '../node'\nimport { DEFAULT_NETWORK_ID, getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [], url = this.url, internalUrl = this.internalUrl, forceCompatibility = false } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach(node => {\n      const { name, instance } = node\n      this.pool.set(name, prepareNodeObject(name, instance))\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n\n    // DEPRECATED. TODO Remove deprecated param\n    // Prevent BREAKING CHANGES. Support for init params `url`, `internalUrl`\n    if (url) {\n      this.addNode('default', await Node({ url, internalUrl, forceCompatibility }), true)\n    }\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId () {\n      return this.networkId || this.selectedNode.networkId || DEFAULT_NETWORK_ID\n    },\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport { BigNumber } from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA, CONTRACT_VERIFICATION_SCHEMA, MIN_GAS_PRICE, OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION, PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA, TX_TYPE\n} from './builder/schema'\nimport { calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    return verify(txWithNetworkId, signature, decodeBase58Check(assertedType(ownerPublicKey, 'ak')))\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gt(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gt(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = Object.prototype.hasOwnProperty.call(tx, 'gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport formatBalance from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Chain.defaults, options)\n  // Verify transaction before broadcast\n  if (this.verifyTxBeforeSend || verify) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error'), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n    return waitMined ? { ...(await this.poll(txHash, options)), rawTx: tx } : { hash: txHash, rawTx: tx }\n  } catch (e) {\n    throw Object.assign(\n      (new Error(e.message)),\n      {\n        rawTx: tx,\n        verifyTx: () => this.unpackAndVerify(tx)\n      }\n    )\n  }\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\n/**\n * @function\n * @deprecated\n */\nasync function balance (address, { height, hash, format = false } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return format ? formatBalance(balance) : balance.toString()\n}\n\nasync function getBalance (address, { height, hash, format = false } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height }).catch(_ => ({ balance: 0 }))\n\n  return format ? formatBalance(balance) : balance.toString()\n}\n\nasync function tx (hash, info = false) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx'].includes(tx.tx.type) && info) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {\n      return tx\n    }\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function pause (duration) {\n  await new Promise(resolve => setTimeout(resolve, duration))\n}\n\nasync function awaitHeight (h, { interval = 5000, attempts = 20 } = {}) {\n  const instance = this\n\n  async function probe (left) {\n    const current = await instance.height()\n    if (current >= h) {\n      return current\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms, current=${current}, h=${h}`)\n  }\n\n  return probe(attempts)\n}\n\nasync function topBlock () {\n  const top = await this.api.getTopBlock()\n  return top[R.head(R.keys(top))]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000 } = {}) {\n  const instance = this\n  const max = await this.height() + blocks\n\n  async function probe () {\n    const tx = await instance.tx(th)\n    if (tx.blockHeight !== -1) {\n      return tx\n    }\n    if (await instance.height() < max) {\n      await pause(interval)\n      return probe()\n    }\n    throw new Error(`Giving up after ${blocks} blocks mined. TxHash ${th}`)\n  }\n\n  return probe()\n}\n\nasync function getTxInfo (hash) {\n  return this.api.getTransactionInfoByHash(hash).then(res => res.callInfo ? res.callInfo : res)\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  // TODO remove cross compatibility\n  const { version } = this.getNodeInfo()\n  const [majorVersion] = version.split('.')\n  if (+majorVersion === 5 && version !== '5.0.0-rc.1') {\n    txs = txs.map(tx => ({ tx }))\n  }\n  return this.api.dryRunTxs({ txs, accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = false }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getBalance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getName\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\n\nimport ChainNode from '../chain/node'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { ABI_VERSIONS, MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE, VM_TYPE, TX_TTL } from './builder/schema'\nimport { buildContractId, oracleQueryId } from './builder/helpers'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee,\n      payload\n    }), TX_TYPE.spend)\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.namePreClaim)\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt, vsn = 2 }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments), vsn })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameClaim, { vsn })\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }), TX_TYPE.nameTransfer)\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameUpdate)\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameRevoke)\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.contractCreate),\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }), TX_TYPE.contractCall)\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion = ABI_VERSIONS.NO_ABI }) {\n  // const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee,\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    }, TX_TYPE.oracleRegister)\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, fee, oracleTtl, nonce, ttl }, TX_TYPE.oracleExtend)\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId }, TX_TYPE.oracleQuery)\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return { tx, queryId: oracleQueryId(senderId, nonce, oracleId) }\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, queryId, response, fee, ttl, nonce }, TX_TYPE.oracleResponse)\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\n// eslint-disable-next-line no-unused-vars\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.gaAttach),\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number, backend: string })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion, backend } = {}) {\n  const { consensusProtocolVersion } = this.getNodeInfo()\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  // TODO remove\n  // Cross node/compiler compatibility\n  if (this.compilerVersion) {\n    const [compilerMajor] = this.compilerVersion.split('.')\n    if (+compilerMajor === 4 && consensusProtocolVersion !== 4) throw new Error(`Compiler ${this.compilerVersion} support only consensus protocol 4(Lima)`)\n    if (+compilerMajor <= 3 && consensusProtocolVersion > 3) throw new Error(`Compiler ${this.compilerVersion} support only consensus protocol less then 3(Fortuna)`)\n    if (backend === VM_TYPE.FATE && consensusProtocolVersion < 4) throw new Error('You can use FATE only after Lima HF')\n    backend = backend || this.compilerOptions.backend\n  }\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : backend === VM_TYPE.AEVM ? protocolForTX.abiVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.abiVersion[0] : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : backend === VM_TYPE.AEVM ? protocolForTX.vmVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.vmVersion[0] : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (protocolForTX.abiVersion.length && !R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = TX_TTL, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl, vsn }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await (calculateTtl.bind(this)(t, !absoluteTtl))\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }), vsn })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = ChainNode.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: null,\n    showWarning: null\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  if (this.isGa) throw new Error('You are trying to sign data using GA account without keypair')\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (format = Crypto.ADDRESS_FORMAT.api) {\n  return Promise.resolve(Crypto.formatAddress(format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (keyPair.pub && keyPair.priv) {\n    keyPair = { publicKey: keyPair.pub, secretKey: keyPair.priv }\n  }\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair, gaId }) {\n    this.isGa = !!gaId\n    if (gaId) {\n      if (!Crypto.isAddressValid(gaId)) throw new Error('Invalid GA address')\n      secrets.set(this, { publicKey: gaId })\n    } else {\n      validateKeyPair(keypair)\n      if (Object.prototype.hasOwnProperty.call(keypair, 'priv') && Object.prototype.hasOwnProperty.call(keypair, 'pub')) {\n        keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n        console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n      }\n\n      this.setSecret(keypair)\n    }\n  },\n  props: { isGa: false },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\n\nasync function sign (data, { onAccount } = {}) {\n  if (onAccount && !assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n  return this.signWith(onAccount || this.Selector.address, data)\n}\n\nasync function address ({ onAccount } = {}) {\n  if (onAccount) {\n    if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n    if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n    return Promise.resolve(onAccount)\n  }\n  if (this.Selector.address) return Promise.resolve(this.Selector.address)\n  throw new Error('You don\\'t have selected account')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair, generateKeyPair } from './utils/crypto'\n\n/**\n * Select specific account\n * @deprecated\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (keypair: {publicKey: String, secretKey: String}) => Void\n * @param {Object} keypair - Key pair to use\n * @param {String} keypair.publicKey - Public key\n * @param {String} keypair.secretKey - Private key\n * @return {Void}\n * @example setKeypair(keypair)\n */\nfunction setKeypair (keypair) {\n  const acc = this.accounts[this.Selector.address] || this._acc\n  if (Object.prototype.hasOwnProperty.call(keypair, 'priv') && Object.prototype.hasOwnProperty.call(keypair, 'pub')) {\n    keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n    console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n  }\n  acc.setSecret(keypair)\n  this.accounts[keypair.publicKey] = acc\n  delete this.accounts[this.Selector.address]\n  this.selectAccount(keypair.publicKey)\n}\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [], keypair }) { // Deprecated. TODO Remove `keypair` param\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    keypair = keypair || envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n    // @Todo Remove after removing depricated `setKeypair` fn.\n    //  Prevent BREAKING CHANGES\n    //  Pre-init memoryAccount object to prevent async operation in `setKeypair` function\n    this._acc = MemoryAccount({ keypair: generateKeyPair() })\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, setKeypair, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { encodeBase58Check, salt } from '../utils/crypto'\nimport { commitmentHash, isNameValid, getMinimumNameFee, classify } from '../tx/builder/helpers'\nimport Ae from './'\nimport { CLIENT_TTL, NAME_FEE, NAME_TTL } from '../tx/builder/schema'\n\n/**\n * Revoke a domain\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function revoke (nameId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * Update an aens entry\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param nameId domain hash\n * @param target new target\n * @param options\n * @return {Object}\n */\nasync function update (nameId, target, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: nameId,\n    accountId: await this.address(opt),\n    pointers: [R.fromPairs([['id', target], ['key', classify(target)]])]\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} nameId\n * @param {String} account\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function transfer (nameId, account, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Query the status of an AENS registration\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @param {Object} opt Options\n * @return {Promise<Object>}\n */\nasync function query (name, opt = {}) {\n  isNameValid(name)\n  const o = await this.getName(name)\n  const nameId = o.id\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || {},\n    update: async (target, options) => {\n      return {\n        ...(await this.aensUpdate(nameId, target, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options) => {\n      return {\n        ...(await this.aensTransfer(nameId, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options) => this.aensRevoke(nameId, R.merge(opt, options))\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Number} salt\n * @param {Record} [options={}]\n * @param {Number|String} [options.nameFee] Name Fee\n * @return {Promise<Object>} the result of the claim\n */\nasync function claim (name, salt, options = {}) {\n  // Todo remove cross compatibility\n  const { version } = this.getNodeInfo()\n  const [majorVersion] = version.split('.')\n  const vsn = +majorVersion === 5 && version !== '5.0.0-rc.1' ? 2 : 1\n  options.vsn = options.vsn || vsn\n\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  // TODO remove cross compatibility\n  if (opt.vsn === 2) {\n    const minNameFee = getMinimumNameFee(name)\n    if (opt.nameFee !== this.Ae.defaults.nameFee && minNameFee.gt(opt.nameFee)) {\n      throw new Error(`the provided fee ${opt.nameFee} is not enough to execute the claim, required: ${minNameFee}`)\n    }\n    opt.nameFee = opt.nameFee !== this.Ae.defaults.nameFee ? opt.nameFee : minNameFee\n  }\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: `nm_${encodeBase58Check(Buffer.from(name))}`\n  }))\n\n  const result = await this.send(claimTx, opt)\n  if (opt.vsn === 1 || name.split('.')[0].length > 12) {\n    delete opt.vsn\n    const nameInter = this.Chain.defaults.waitMined ? await this.aensQuery(name, opt) : {}\n    return Object.assign(result, nameInter)\n  }\n  return result\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @param {Record} [options={}]\n * @return {Promise<Object>}\n */\nasync function preclaim (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const hash = commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId: hash\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId: hash\n  })\n}\n\n/**\n * Bid to name auction\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name Domain name\n * @param {String|Number} nameFee Name fee amount\n * @param {Record} [options={}]\n * @return {Promise<Object>}\n */\nasync function bid (name, nameFee = NAME_FEE, options = {}) {\n  return this.aensClaim(name, 0, { ...options, nameFee, vsn: 2 })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke,\n    aensBid: bid\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        clientTtl: CLIENT_TTL,\n        nameTtl: NAME_TTL, // aec_governance:name_claim_max_expiration() => 50000\n        nameFee: NAME_FEE\n      }\n    }\n  }\n})\n\nexport default Aens\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { data: e.response.data }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    delete: _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required\n  }\n}))\n\n/**\n * Get contract ACI\n * @function contractGetACI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, options: Array) => aciObject: Promise[Object]\n * @param {String} source - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} - Contract aci object\n */\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array, options: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @param {String} backend - Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\nimport { VM_TYPE } from '../tx/builder/schema'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/version', options)\n    .then(({ version }) => version)\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  options = this.prepareCompilerOption(options)\n  return this.http\n    .post('/encode-calldata', { source, function: name, arguments: args, options }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, backend = this.compilerOptions.backend, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata, backend }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  options = this.prepareCompilerOption(options)\n  return this.http\n    .post('/decode-calldata/source', { function: fn, source, calldata: callData }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  options = this.prepareCompilerOption(options)\n  return this.http\n    .post('/decode-call-result', { function: fn, source, 'call-result': callResult, 'call-value': callValue, options }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  options = this.prepareCompilerOption(options)\n  return this.http.post('/compile', { code, options }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  options = this.prepareCompilerOption(options)\n  return this.http.post('/aci', { code, options }, options)\n}\n\nasync function setCompilerUrl (url, { forceCompatibility = false } = {}) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = null\n  await this.checkCompatibility({ forceCompatibility })\n}\n\nasync function checkCompatibility ({ force = false, forceCompatibility = false } = {}) {\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (!forceCompatibility && this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction prepareCompilerOption (options = {}) {\n  return { ...this.compilerOptions, ...options, file_system: options.filesystem || {} }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl, forceCompatibility = false }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    await this.checkCompatibility({ force: true, forceCompatibility })\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    isInit,\n    checkCompatibility,\n    prepareCompilerOption\n  },\n  props: {\n    compilerVersion: null,\n    compilerOptions: {\n      backend: VM_TYPE.FATE\n    }\n  }\n})\n\nconst COMPILER_GE_VERSION = '3.1.0'\nconst COMPILER_LT_VERSION = '5.0.0'\n\nexport default ContractCompilerAPI\n","/* eslint-disable no-unused-vars */\nimport Joi from 'joi-browser'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), {})\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[_, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [_, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const aciType = [\n    ...bindings.typedef,\n    { name: 'state', typedef: bindings.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n\n  return aciType.typedef\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // Link State and typeDef\n  if (\n    (typeof t === 'string' && t.indexOf(bindings.contractName) !== -1) ||\n    (typeof t === 'object' && Object.keys(t)[0] && Object.keys(t)[0].indexOf(bindings.contractName) !== -1)\n  ) {\n    t = linkTypeDefs(t, bindings)\n  }\n\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport function transform (type, value, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${value.map(el => transform(generic, el, { bindings }))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${value.map((el, i) => transform(generic[i], el, {\n        bindings\n      }))})`\n    case SOPHIA_TYPES.option: {\n      return value === undefined ? 'None' : `Some(${transform(generic, value, {\n        bindings\n      })})`\n    }\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return `#${typeof value === 'string' ? value : Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${generic.reduce(\n        (acc, { name, type }, i) => {\n          acc += `${i !== 0 ? ',' : ''}${name} = ${transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nfunction transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${variantArgs.slice(0, type.length).map((el, i) => transform(type[i], el, {\n      bindings\n    }))})`\n  }`\n}\n\nexport function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${value\n    .reduce(\n      (acc, [key, value], i) => {\n        if (i !== 0) acc += ','\n        acc += `[${transform(generic[0], key, {\n          bindings\n        })}] = ${transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ''\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map: {\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    }\n    case SOPHIA_TYPES.option: {\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    }\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record: {\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n    }\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  if (!Object.keys(SOPHIA_TYPES).includes(t)) t = SOPHIA_TYPES.address // Handle Contract address transformation\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return prepareSchema(generic, { bindings }).optional().error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = Object.prototype.hasOwnProperty.call(context, 'value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        value = value === 'string' ? Buffer.from(value, 'hex') : Buffer.from(value)\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).sparse(true).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","import * as R from 'ramda'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name) {\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: {\n      state: aci.state,\n      typedef: aci.type_defs,\n      contractName: aci.name\n    }\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {},\n  ...instance.aci ? {\n    init: Object.assign(\n      function () {\n        const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n        const { opt, args } = parseArguments(aciArgs)(arguments)\n        return instance.deploy(args, opt)\n      },\n      {\n        get () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: true })\n        },\n        send () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: false })\n        }\n      }\n    )\n  } : {}\n})\n\nconst parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\n\nimport { validateArguments, transform, transformDecodedData } from './transformation'\nimport { buildContractMethods, getFunctionACI } from './helpers'\nimport AsyncInit from '../../utils/async-init'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nasync function prepareArgsForEncode (aci, params) {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options={}] Options object\n * @param {Object} [options.aci] Contract ACI\n * @param {Object} [options.contractAddress] Contract address\n * @param {Object} [options.filesystem] Contact source external namespaces map\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, filesystem = {}, opt } = {}) {\n  aci = aci || await this.contractGetACI(source, { filesystem })\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: 0,\n    gasPrice: 1000000000, // min gasPrice 1e9\n    amount: 0,\n    gas: 1600000 - 21000,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false,\n    filesystem\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn)\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n  if (\n    BigNumber(opt.amount).gt(0) &&\n    (Object.prototype.hasOwnProperty.call(fnACI, 'payable') && !fnACI.payable)\n  ) throw new Error(`You try to pay \"${opt.amount}\" to function \"${fn}\" which is not payable. Only payable function can accept tokens`)\n  params = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, bindings: fnACI.bindings }\n    )\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init')\n  const source = opt.source || instance.source\n\n  if (!instance.compiled) await instance.compile(opt)\n  init = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, init) : init\n\n  if (opt.callStatic) {\n    return client.contractCallStatic(source, null, 'init', init, {\n      top: opt.top,\n      options: opt,\n      bytecode: instance.compiled\n    })\n  } else {\n    const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n    instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n    return instance.deployInfo\n  }\n}\n\nconst compile = ({ client, instance }) => async (options = {}) => {\n  const { bytecode } = await client.contractCompile(instance.source, { ...instance.options, ...options })\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\nexport default AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/crypto'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError (result) {\n  const error = Buffer.from(result.returnValue).toString()\n  if (isBase64(error.slice(3))) {\n    const decodedError = Buffer.from(error.slice(3), 'base64').toString()\n    throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n  }\n\n  const decodedError = await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n}\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @param {Object} [options.backend='fate'] Compiler backend\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args, options) {\n  return this.contractEncodeCallDataAPI(source, name, args, options)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args  Argument's for call function\n * @param {Object} [options={}]  Options\n * @param {String} [options.top] Block hash on which you want to call contract\n * @param bytecode\n * @param {String} options [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} filesystem [options.options.filesystem] Contract external namespaces map\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {}, bytecode } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Prepare call-data\n  const callData = await this.contractEncodeCall(source, name, args, opt)\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n  // Prepare nonce\n  const nonce = top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  if (name === 'init') {\n    // Prepare deploy transaction\n    const { tx } = await this.contractCreateTx(R.merge(opt, {\n      callData,\n      code: bytecode,\n      ownerId: callerId,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  } else {\n    // Prepare `call` transaction\n    const tx = await this.contractCallTx(R.merge(opt, {\n      callerId,\n      contractId: address,\n      callData,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  }\n}\n\nasync function dryRunContractTx (tx, callerId, source, name, opt = {}) {\n  const { top } = opt\n  // Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // check response\n  if (status !== 'ok') throw new Error('Dry run error, ' + reason)\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError(callObj)\n  }\n  return {\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, opt)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call function\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, args = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args, opt)\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return {\n      hash,\n      rawTx,\n      result,\n      decode: () => this.contractDecodeData(source, name, result.returnValue, result.returnType, opt)\n    }\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array} initState Arguments of contract constructor(init) function\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = await this.contractEncodeCall(source, 'init', initState, opt)\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      address: contractId,\n      call: async (name, args = [], options = {}) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n      callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, { ...options, options: { onAccount: opt.onAccount, ...R.merge(opt, options.options) } }),\n      createdAt: new Date()\n    })\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @param {Object} [options.backend='aevm'] Contract backend version (aevm|fate)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args, R.merge(opt, options)),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, R.merge(opt, options)),\n    deployStatic: async (init, options = {}) => this.contractCallStatic(source, null, 'init', init, { bytecode, top: options.top, options: R.merge(opt, options) })\n  }, { bytecode }))\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    dryRunContractTx,\n    handleCallError\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: 0,\n        gasPrice: 1000000000, // min gasPrice 1e9\n        amount: 0,\n        gas: 1600000 - 21000,\n        options: '',\n        dryRunAccount: { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx, unpackTx } from '../../tx/builder'\nimport { hash } from '../../utils/crypto'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n  // TODO remove\n  // Compiler backend cross compatibility\n  const { tx: { typeInfo } } = await unpackTx(bytecode, false, 'cb')\n  if (!typeInfo[fnName]) {\n    return { bytecode, authFun: hash(fnName) }\n  }\n  const { funHash: authFun } = typeInfo[fnName]\n  return { bytecode, authFun }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { ContractAPI } from '../../ae/contract'\nimport { TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = ContractAPI.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Get abi\n  const { abiVersion } = await this.getVmVersion(TX_TYPE.contractCall)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: abiVersion, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport uuid from 'uuid/v4'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport * as R from 'ramda'\nimport Tx from '../tx/tx'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\nimport GeneralizeAccount from '../contract/ga'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(Tx.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nconst Wallet = Ae.compose(Accounts, Chain, NodePool, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve !== undefined) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check } from '../utils/crypto'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    pollQueries: (onQuery, { interval } = {}) => this.pollForQueries(oracleId, onQuery, { interval }),\n    postQuery: (query, options) => this.postQueryToOracle(oracleId, query, options),\n    respondToQuery: (queryId, response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    extendOracle: (oracleTtl, options) => this.extendOracleTtl(oracleId, oracleTtl, options),\n    getQuery: async (queryId) => {\n      return getQueryObject.bind(this)(oracleId, queryId)\n    }\n  }\n}\n\n/**\n * Poll for oracle queries\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {Function} onQuery OnQuery callback\n * @param {Object} [options] Options object\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Function} stopPolling - Stop polling function\n */\nasync function pollForQueries (oracleId, onQuery, { interval = 5000 } = {}) {\n  const queries = (await this.getOracleQueries(oracleId)).oracleQueries || []\n  let quriesIds = queries.map(q => q.id)\n  onQuery(queries)\n\n  async function pollQueries () {\n    const { oracleQueries: q } = await this.getOracleQueries(oracleId)\n    const newQueries = q.filter(({ id }) => !quriesIds.includes(id))\n    if (newQueries.length) {\n      quriesIds = [...quriesIds, ...newQueries.map(a => a.id)]\n      onQuery(newQueries)\n    }\n  }\n  const intervalId = setInterval(pollQueries.bind(this), interval)\n  return () => clearInterval(intervalId)\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  return {\n    ...(await this.getOracleQuery(oracleId, queryId)),\n    respond: (response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    pollForResponse: ({ attempts, interval }) => this.pollForQueryResponse(oracleId, queryId, { attempts, interval }),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  const emptyResponse = 'or_Xfbg4g=='\n  async function pause (duration) {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n  async function probe (left) {\n    const query = await this.getOracleQuery(oracleId, queryId)\n    if (query.response !== emptyResponse) {\n      return { response: query.response, decode: () => decodeBase64Check(query.response.slice(3)) }\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe.bind(this)(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms`)\n  }\n  return probe.bind(this)(attempts)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await getOracleObject.bind(this)(`ok_${accountId.slice(3)}`))\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const { tx: oracleRegisterTx, queryId } = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await (await getOracleObject.bind(this)(oracleId)).getQuery(queryId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...(await this.send(oracleExtendTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...(await this.send(oracleRespondTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    pollForQueries,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        queryFee: 30000,\n        oracleTtl: { type: 'delta', value: 500 },\n        queryTtl: { type: 'delta', value: 10 },\n        responseTtl: { type: 'delta', value: 10 }\n      }\n    }\n  }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI } from './contract'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nconst Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\n\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport * as R from 'ramda'\nimport JSONBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection, channelClosed, channelOpen } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nconst options = new WeakMap()\nconst status = new WeakMap()\nconst state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nconst eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nconst channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\n\nfunction channelURL (url, params) {\n  const paramString = R.join('&', R.values(R.mapObjIndexed((value, key) =>\n    `${pascalToSnake(key)}=${encodeURIComponent(value)}`, params)))\n\n  return `${url}?${paramString}`\n}\n\nfunction emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nfunction changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nfunction changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nfunction send (channel, message) {\n  websockets.get(channel).send(JSONBig.stringify(message))\n}\n\nfunction enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JSONBig.parse(data)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nfunction call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nfunction disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nfunction WebSocket (url, callbacks) {\n  function fireOnce (target, key, fn) {\n    const once = R.once(fn)\n    const original = target[key]\n    target[key] = (...args) => {\n      once(...args)\n      if (typeof original === 'function') {\n        original(...args)\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const ws = new W3CWebSocket(url)\n    // eslint-disable-next-line no-return-assign\n    Object.entries(callbacks).forEach(([key, callback]) => ws[key] = callback)\n    fireOnce(ws, 'onopen', () => resolve(ws))\n    fireOnce(ws, 'onerror', (err) => reject(err))\n  })\n}\n\nasync function initialize (channel, channelOptions) {\n  const optionsKeys = ['sign', 'url']\n  const params = R.pickBy((_, key) => !optionsKeys.includes(key), channelOptions)\n  const { url } = channelOptions\n  const wsUrl = channelURL(url, { ...params, protocol: 'json-rpc' })\n\n  options.set(channel, channelOptions)\n  fsm.set(channel, { handler: params.reconnectTx ? channelClosed : awaitingConnection })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n  const ws = await WebSocket(wsUrl, {\n    onopen: () => {\n      changeStatus(channel, 'connected')\n      if (params.reconnectTx) {\n        enterState(channel, { handler: channelOpen })\n      }\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  })\n  websockets.set(channel, ws)\n}\n\nexport {\n  initialize,\n  options,\n  status,\n  state,\n  eventEmitters,\n  emit,\n  changeStatus,\n  changeState,\n  send,\n  enqueueAction,\n  channelId,\n  call,\n  disconnect\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  send,\n  emit,\n  channelId,\n  disconnect\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (result) {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n        case 'shutdown':\n          return { handler: channelOpen }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingOffChainUpdate, state }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  // eslint-disable-next-line no-useless-escape\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^\\.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    state.resolve(message.params.data.tx)\n    return { handler: channelClosed }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingDepositCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingNewContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    // eslint-disable-next-line standard/computed-property-even-spacing\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingCallContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  return { handler: channelClosed }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport { buildTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  send(this, { jsonrpc: '2.0', method: 'channels.message', params: { info, to: recipient } })\n}\n\nasync function reconnect (options, txParams) {\n  const { sign } = options\n\n  return Channel({\n    ...options,\n    reconnectTx: await sign('reconnect', buildTx(txParams, TX_TYPE.channelReconnect).tx)\n  })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    status,\n    state,\n    id,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls\n  },\n  statics: {\n    reconnect\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, NodePool, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport const UniversalWithAccounts = Universal\nexport default Universal\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as Crypto from './utils/crypto'\nimport * as Bytes from './utils/bytes'\nimport * as TxBuilder from './tx/builder'\nimport * as TxBuilderHelper from './tx/builder/helpers'\nimport HdWallet from './utils/hd-wallet'\n\nimport Ae from './ae'\nimport Chain from './chain'\nimport ChainNode from './chain/node'\nimport Node from './node'\nimport NodePool from './node-pool'\nimport Tx from './tx'\nimport Transaction from './tx/tx'\nimport TransactionValidator from './tx/validator'\nimport Account from './account'\nimport Accounts from './accounts'\nimport MemoryAccount from './account/memory'\nimport Aens from './ae/aens'\nimport Contract from './ae/contract'\nimport GeneralizeAccount from './contract/ga'\nimport ContractCompilerAPI from './contract/compiler'\nimport Wallet from './ae/wallet'\nimport Aepp from './ae/aepp'\nimport Oracle from './ae/oracle'\nimport OracleNodeAPI from './oracle/node'\nimport Selector from './account/selector'\nimport Channel from './channel'\nimport Universal from './ae/universal'\nimport ContractACI from './contract/aci'\n\nexport {\n  Account,\n  Accounts,\n  Ae,\n  Aens,\n  Aepp,\n  Bytes,\n  Contract,\n  ContractCompilerAPI,\n  ContractACI,\n  ChainNode,\n  Channel,\n  Crypto,\n  Chain,\n  GeneralizeAccount,\n  HdWallet,\n  MemoryAccount,\n  Node,\n  NodePool,\n  Oracle,\n  OracleNodeAPI,\n  Selector,\n  Transaction,\n  TransactionValidator,\n  Tx,\n  TxBuilder,\n  TxBuilderHelper,\n  Universal,\n  Wallet\n}\n"],"sourceRoot":""}